# ============================================================================
# Multi-Agentic Systems - Comprehensive .gitignore
# ============================================================================

# ============================================================================
# Python
# ============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ============================================================================
# IDEs and Editors
# ============================================================================

# Visual Studio Code
.vscode/
*.code-workspace

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/
*.iml
*.iws
*.ipr
out/

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Atom
.atom/

# ============================================================================
# Operating System Files
# ============================================================================

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon?
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ============================================================================
# Multi-Agentic Systems Specific
# ============================================================================

# Agent logs and outputs
agents/logs/
agents/*/logs/
agent_outputs/
conversation_logs/
task_logs/
execution_logs/

# Model artifacts and checkpoints
models/checkpoints/
models/weights/
models/saved_models/
*.pkl
*.joblib
*.h5
*.hdf5
*.onnx
*.pb

# Data files (be careful with this - you might want to version control some data)
data/raw/
data/processed/
data/temp/
data/cache/
*.csv
*.json
*.jsonl
*.parquet
*.feather
*.xlsx
*.xls

# Configuration files with sensitive information
config/local/
config/secrets/
secrets.yaml
secrets.json
api_keys.txt
credentials.json

# Queue and message broker files
celerybeat-schedule.*
redis.conf
rabbitmq.conf

# Database files
*.db
*.sqlite
*.sqlite3
database/

# Cache directories
cache/
.cache/
tmp/
temp/

# Monitoring and metrics
metrics/
monitoring/
prometheus/
grafana/

# Docker
.dockerignore
docker-compose.override.yml
.docker/

# Kubernetes
k8s/secrets/
*.secret.yaml

# ============================================================================
# Development and Testing
# ============================================================================

# Testing artifacts
.pytest_cache/
.coverage
htmlcov/
test-results/
test_outputs/
screenshots/

# Profiling
*.prof
*.profile
profiling_results/

# Benchmarking
benchmark_results/
performance_logs/

# Documentation build
docs/build/
docs/_build/
site/

# ============================================================================
# Deployment and Infrastructure
# ============================================================================

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl
terraform.tfvars
*.auto.tfvars

# Ansible
*.retry
.vault_pass.txt

# Cloud provider specific
.aws/
.gcp/
.azure/

# ============================================================================
# Logs and Runtime Files
# ============================================================================

# Application logs
*.log
logs/
log/
application.log
error.log
access.log
debug.log

# Process IDs
*.pid
*.seed
*.pid.lock

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# ============================================================================
# Backup and Temporary Files
# ============================================================================

# Backup files
*.bak
*.backup
*.old
*.orig
*.save
*~

# Temporary files
*.tmp
*.temp
.tmp/
temp/

# Archive files (unless specifically needed)
*.zip
*.tar.gz
*.tgz
*.rar
*.7z

# ============================================================================
# Security and Sensitive Data
# ============================================================================

# SSL certificates and keys
*.pem
*.key
*.crt
*.csr
*.p12
*.pfx

# SSH keys
id_rsa
id_dsa
id_ecdsa
id_ed25519
*.pub

# GPG keys
*.gpg
*.asc

# Environment-specific files
.env.local
.env.development
.env.test
.env.production
.env.staging

# ============================================================================
# Node.js (if using any frontend components)
# ============================================================================

# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage
.grunt

# Bower dependency directory
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons
build/Release

# Dependency directories
jspm_packages/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
.tmp
.temp

# Langgraph API
.langgraph_api

# ============================================================================
# End of .gitignore
# ============================================================================
